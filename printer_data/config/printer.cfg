[include mainsail.cfg]
[include huvud.cfg]
#[include neopixel.cfg]
[include macros.cfg]

# This file contains common pin mappings for the Duet3 Mini 5+. To use
# this config, the firmware should be compiled for the SAME54P20 with
# a "25Mhz crystal", "16KiB bootloader", and USB communication.

# To flash the board, double tap the board's reset button to enter the
# bootloader and then run: make flash FLASH_DEVICE=/dev/ttyACM0
# Set it to CAN bridge mode, then serial device will be gone

# See docs/Config_Reference.md for a description of parameters.

# set RPI can bus speed
# /etc/network/interfaces.d/can0

# Flashing the Duet3
# ------------------
# double tap the reset button so you see flashing red LED
# https://www.klipper3d.org/Installation.html
#
# ls /dev/serial/by-id/*
# By default the can0, mini5, and huvud are all set to 250K speed
# need to first flash huvud to 1000k, then mini5, then change can0 to be the same
# Enable extra low-level config
# Micro Controller: SAME54P20 (SAME5x)
# Processor Model: SAME54P20
# Bootloader offset: 16KiB bootloader (Duet3)
# Clock Reference: 25Mhz crystal
# Processor Speed: 120 MHz (standard)
# Communication: (USB to CAN bus bridge)
# CAN bus interface: CAN bus on PB15/PB14
# CAN speed (250k initially but then set to 1000k)
#
# make clean
# make
# ls /dev/serial/by-id/*
# sudo service klipper stop
# make flash FLASH_DEVICE=/dev/serial/by-id/{the id you found above here}
# sudo service klipper start


# Pins for reference:
# Driver Step Pins - 0:PC26, 1:PC25, 2:PC24, 3:PC19, 4:PC16, 5:PC30, 6:PC18
# Driver Dir pins - 0:PB3, 1:PB29, 2:PB28, 3:PD20, 4:PD21, 5:PB0, 6:PA27
# Driver Enable - !PC28
# Uart addresses - 0:0 1:1 2:2 3:3 4:!0 5:!1 6:!2 | "!" is for inverted select pin
# Thermistor Pins - T0:PC0, T1:PC1, T2:PC2
# Vssa Sense:PB4 | Vref Sense:PB5
# Current Sense resistor for drivers - .076ohm
# SPI lines:{PD11, PC7} -> Shared SerCom#7, SPIMosi:PC12, SPIMiso:PC15, SPISCLK:PC13
# Vin Monitor:PC3, uses 11:1 voltage divider
# LED's - Diag:PA31, Act:PA30
# 12864 LCD - LCDCSPIN:PC6, ENCA:PC11, ENCB:PD1, ENCSW:PB9, LCD A0:PA2, LCDBeep:PA9, LCD Neopixel Out:PB12 (shared with IO3.out)
# Neopixel Out - PA8
# Serial0 - TX:PB25, RX:PB24 (USB)
# Serial1 - TX:PB31, RX:PB30
# SBC SPISS pin:PA6, SBCTfrReady:PA3, SerComPins:{PA4, PA5, PA6, PA7}
# CAN Pins - TX:PB14 RX:PB15
# Heaters, Fan outputs - {Out0:PB17 Out1:PC10 Out2:PB13 Out3:PB11 Out4:PA11, Out5:PB2, Out6:PB1} | Out6 is shared with VFD_Out
# Tach Pins for Fans - {Out3.Tach:PB27 Out4.Tach:PB26}
# GPIO_out - {IO1:PB31 IO2:PD9 IO3:PB12 IO4:PD10} IO4 is shared with PSON
# GPIO_in - {IO1:PB30 IO2:PD8 IO3:PB7 IO4:PC5 IO5:PC4 IO6:PC31}
# Driver Diag - {D0:PA10, D1:PB8, D2:PA22, D3:PA23, D4:PC21, D5:PB10, D6:PA27}
# Mux Pin - PD0
# EXP headers only support 12864 LCD's


# Enable arcs support
[gcode_arcs]
resolution: 0.1

[stepper_x]
#driver1  LDO-42STH48-2804AH  (1.8degree)  @2.8A
#Motor B (Left Side)
step_pin: PC25
dir_pin: !PB29
enable_pin: !PC28
microsteps: 16
rotation_distance: 40
endstop_pin: !huvud:LIMIT_3 # PB12
position_endstop: 247
position_min: 0
position_max: 247
homing_speed: 25.0
homing_retract_speed: 5.0
second_homing_speed: 5.0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PA1
tx_pin: PA0
select_pins: PD0
uart_address: 1
run_current: 1
sense_resistor: 0.056

[stepper_y]
#driver0   LDO-42STH48-2804AH  (1.8degree)  @2.8A
#Motor A (Right Side)
step_pin: PC26
dir_pin: !PB3
enable_pin: !PC28
microsteps: 16
rotation_distance: 40
endstop_pin: !PB30
position_endstop: 225
position_min: 0
position_max: 225
homing_speed: 25.0
homing_retract_speed: 5.0
second_homing_speed: 5.0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PA1
tx_pin: PA0
select_pins: PD0
uart_address: 0
run_current: 1
sense_resistor: 0.056

[stepper_z]
#driver2  Creality 42-40(S)  (1.8degree)  @1A
#Lead_Screws = T8 PTFE Teflonoto Lead Screw 2MM 400
step_pin: PC24
dir_pin: PB28
enable_pin: !PC28
microsteps: 16
rotation_distance: 2
endstop_pin: probe:z_virtual_endstop # use beacon as virtual endstop
position_min: -15.0
homing_retract_dist: 0 # beacon needs this to be set to 0
position_max: 275
full_steps_per_rotation: 200

[stepper_z1]
#driver4  Creality 42-34 (1.8degree)  @1A
step_pin: PC16
dir_pin: PD21
enable_pin: !PC28
microsteps: 16
rotation_distance: 2
full_steps_per_rotation: 200

[stepper_z2]
#driver3   Creality 42-34 (1.8degree) @1A
step_pin: PC19
dir_pin: PD20
enable_pin: !PC28
microsteps: 16
rotation_distance: 2
full_steps_per_rotation: 200

[tmc2209 stepper_z]
uart_pin: PA1
tx_pin: PA0
select_pins: PD0
uart_address: 2
run_current: 0.8
sense_resistor: 0.056

[tmc2209 stepper_z1]
uart_pin: PA1
tx_pin: PA0
select_pins: !PD0
uart_address: 0
run_current: 0.8
sense_resistor: 0.056

[tmc2209 stepper_z2]
uart_pin: PA1
tx_pin: PA0
select_pins: PD0
uart_address: 3
run_current: 0.8
sense_resistor: 0.056

## EXTRUDERS
[tmc2209 extruder]
run_current: 0.5
sense_resistor: 0.110
uart_pin: huvud:EXT_UART_RX
tx_pin: huvud:EXT_UART_TX

[extruder]
step_pin: huvud:EXT_STEP
dir_pin: huvud:EXT_DIR
max_extrude_only_distance: 200
enable_pin: !huvud:EXT_EN
heater_pin: huvud:HE0
sensor_pin: huvud:TH1
sensor_type: PT1000  # Rapido HF
pullup_resistor: 2200            # 4700 is default and does not need defining, 2200 is used for the PT1000
min_extrude_temp: 170             
min_temp: 0
max_temp: 285
pressure_advance: 0.03
nozzle_diameter: 0.4
filament_diameter: 1.75
#control = pid
#pid_kp = 23.826
#pid_ki = 1.185
#pid_kd = 119.725
max_extrude_only_distance: 600 # default is 50mm

# LGX Lite
rotation_distance: 53.494165 # LGX Lite 5mm Drive Gears
gear_ratio: 44:10, 37:17 # LGX Lite - Gear Ratio Primary=44:10, Secondary=37:17
full_steps_per_rotation: 200 # 1.8 Degree Stepper
microsteps: 16

#  ------------------
#  |                Z2 = 245,0
#  |                |
#  Z0 = 124.5,224   |    [Front]
#  |                |
#  |                Z1 = 7,0
#  ------------------
#                  0,0

[z_tilt]
z_positions: # nozzle positions
  128.5, 224 #stepper_z Mini Tank
  9, 20.5 #stepper_z1 Mini Tank
  243.5, 20.5  #stepper_z2 Mini Tank
points: 
  #243,220  #probe location Right Rear
  #8,220 #probe location Left Rear
  128.5, 220  # probe center Rear
  9, 0.5 #probe location Left Front
  243.5, 0.5 #probe location Right Front
speed: 100
horizontal_move_z: 30
retries: 5 # Number of times to retry if the probed points aren't within tolerance.
retry_tolerance:0.150

[adc_scaled vref_scaled]
vref_pin: PB5
vssa_pin: PB4

[heater_bed]
heater_pin: PB17 #out1
sensor_type: Generic 3950
sensor_pin: vref_scaled:PC0
#control: pid
pullup_resistor: 2200
#pid_Kp: 61.049
#pid_Ki: 2.339
#pid_Kd: 398.344
min_temp: 0
max_temp: 130

[heater_fan heatbreak_fan]
pin: PB11


[temperature_fan duet_mcu_fan]
pin: PA11 #out3
tachometer_pin: PB27 #Out3.Tach
max_power: 0.4 #amps
sensor_type: temperature_mcu
max_temp: 55.0                #Set below 60C, Pi3+ MCU can be damaged at 85C
target_temp: 49.0             #Set this to your preferred running temperature
min_temp: 0
shutdown_speed: 0.0
kick_start_time: 0.5
off_below: 0.19
max_speed: 1.0
min_speed: 0.0
control: pid
pid_Kp: 2.0
pid_Ki: 5.0
pid_Kd: 0.5
pid_deriv_time: 2.0

[mcu]
#serial: /dev/ttyACM0
canbus_uuid: 3e1b9fbf635c

[printer]
kinematics: corexy
max_velocity: 350
max_accel: 20000
max_z_velocity: 8
max_z_accel: 350
square_corner_velocity: 5

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100


# EXP1 / EXP2 (display) pins
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PA9, EXP1_3=PC6, EXP1_5=<LCD_RST>, EXP1_7=<NC>, EXP1_9=<GND>,
    EXP1_2=PB9, EXP1_4=PA2, EXP1_6=PB12,      EXP1_8=<NC>, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PC15,  EXP2_3=PD1,  EXP2_5=PC11, EXP2_7=PD12,        EXP2_9=<GND>,
    EXP2_2=PC13, EXP2_4=PC14, EXP2_6=PC12, EXP2_8=<RESET_EXT>, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of spi bus "sercom7"

# See the sample-lcd.cfg file for definitions of common LCD displays.

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevD_2510B6D4515137474C202020FF0D281B-if00
x_offset: 0 # update with offset from nozzle on your machine
y_offset: -20 # update with offset from nozzle on your machine
contact_max_hotend_temperature: 180 # increase to probe at print temps
home_xy_position: 128.5, 112.5 # update with your safe position
home_z_hop: 5
home_z_hop_speed: 15
home_xy_move_speed: 150
home_method: contact # use proximity for induction homing
home_method_when_homed: proximity # after initial calibration use induction
home_autocalibrate: unhomed # contact will calibrate beacon on first home

[bed_mesh]
# rectangular bed, probe_count = 3, 3:
#             x---x---x (max_point)
#             |
#             x---x---x
#                     |
# (min_point) x---x---x
speed: 75
horizontal_move_z: 10
mesh_min: 10, 2.5 #probe location
mesh_max: 214, 180 #probe location
probe_count: 6, 6
fade_start: 1
fade_end: 10
algorithm: bicubic

#####################################################################
#                             Macros
#####################################################################

[gcode_macro _km_options]
# These are examples of some likely customizations:
# Any sheets in the below list will be available with a configurable offset.
variable_bed_surfaces: ['smooth_1','texture_1']
# Length (in mm) of filament to load (bowden tubes will be longer).
#variable_load_length: 50.0

# Customize the filament menus (up to 10 entries).
variable_menu_temperature: [
  {'name' : 'PLA',  'extruder' : 200.0, 'bed' : 60.0},
  {'name' : 'PETG', 'extruder' : 230.0, 'bed' : 85.0},
  {'name' : 'ABS',  'extruder' : 245.0, 'bed' : 110.0, 'chamber' : 60}]
# Length of filament (in millimeters) to purge at print start.
variable_start_purge_length: 30 # This value works for most setups.
gcode: # This line is required by Klipper.
# Any code you put here will run at klipper startup, after the initialization
# for these macros. For example, you could uncomment the following line to
# automatically adjust your bed surface offsets to account for any changes made
# to your Z endstop or probe offset.
#  ADJUST_SURFACE_OFFSETS
#variable_park_x: 10.0
# Y position to park toolhead (set "max" or "min" to infer from stepper config).
#variable_park_y: 350.0

# This line includes all the standard macros.
#[include klipper-macros/*.cfg]

# The sections below here are required for the macros to work. If your config
# already has some of these sections you should merge the duplicates into one
# (or if they are identical just remove one of them).
[idle_timeout]
gcode:
  _KM_IDLE_TIMEOUT # This line must be in your idle_timeout section.

[pause_resume]

[respond]

[save_variables]
filename: ~/printer_data/config/variables.cfg # UPDATE THIS FOR YOUR PATH!!!

[display_status]

[exclude_object]

[virtual_sdcard]
path: ~/printer_data/gcodes

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

[gcode_macro START_PRINT]
gcode:
    ; Get first-layer bed-temp from slicer
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    ; Get first-layer extruder-temp from slicer
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}    
    
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0.0

    G28     ; home axes
    G0 Z2   ; position beacon at 2mm for heat soak

    M140 S{BED_TEMP}     ; start bed heater
    M109 S150       ; preheat nozzle to probing temp
    M190 S{BED_TEMP}     ; wait on bed temperature
    G4 P20000       ; optional, let temps settle for 20 sec

    #WIPE_NOZZLE     ; call another macro to wipe nozzle if available

    G28 Z METHOD=CONTACT CALIBRATE=1    ; calibrate z offset and beacon model hot
    Z_TILT_ADJUST                       ; or QGL to balance towers
    BED_MESH_CALIBRATE RUNS=2           ; bed mesh in scan mode

    #WIPE_NOZZLE
    G28 Z METHOD=CONTACT CALIBRATE=0    ; calibrate z offset only after tilt/mesh

    M104 S{EXTRUDER_TEMP}                    ; set extruder to print temp
    M109 S{EXTRUDER_TEMP}                    ; wait for extruder temp

    SET_GCODE_OFFSET Z=0.06     ; add a little offset for hotend thermal expansion
                            ; needs fine tuning, long meltzones require more
   # SET_GCODE_OFFSET Z_ADJUST={OFFSET}  ; apply optional material squish via slicer

    PRIME_LINE   ; call another macro to purge or prime nozzle
    ; start printing


[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84

[gcode_macro PRIME_LINE]
gcode:
    G92 E0 ; Reset Extruder
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X5 Y15 Z0.3 F5000.0 ; Move to start position
    G1 X5 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
    G1 X5.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
    G1 X5.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
    G92 E0 ; Reset Extruder

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [beacon model default]
#*# model_coef = 1.6856775497409744,
#*# 	1.9852942828081892,
#*# 	0.7678586864334999,
#*# 	0.44332262179922277,
#*# 	0.03690780789408446,
#*# 	-0.29003170042942883,
#*# 	0.06849765478947417,
#*# 	0.38530073524629976,
#*# 	0.043249456036992796,
#*# 	-0.12009198902908388
#*# model_domain = 3.2957864573473716e-07,3.34639451012628e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 22.105410
#*# model_offset = 0.00000
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.157480, 0.195218, 0.205399
#*# 	-0.341180, 0.108551, 0.156333
#*# 	-0.536521, -0.034581, 0.067976
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 8.0
#*# max_x = 220.0
#*# min_y = 0.5
#*# max_y = 200.0
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 37.967
#*# pid_ki = 1.446
#*# pid_kd = 249.155
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.805
#*# pid_ki = 3.249
#*# pid_kd = 55.283
